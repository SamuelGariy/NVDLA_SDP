#include <sdp.h>
bool sdp::decode_sdp_Compute_PReLU_group1() {
auto local_var_1 = sdp_group1_d_bs_bypass.range(0, 0);
sc_biguint<1> local_var_2 = 0;
bool local_var_3 = (local_var_1 == local_var_2);
auto local_var_5 = sdp_group1_d_bn_bypass.range(0, 0);
sc_biguint<1> local_var_6 = 1;
bool local_var_7 = (local_var_5 == local_var_6);
bool local_var_8 = (local_var_3 & local_var_7);
auto local_var_10 = sdp_group1_d_ew_bypass.range(0, 0);
sc_biguint<1> local_var_11 = 1;
bool local_var_12 = (local_var_10 == local_var_11);
bool local_var_13 = (local_var_8 & local_var_12);
auto local_var_15 = sdp_group1_d_bs_mul_bypass.range(0, 0);
sc_biguint<1> local_var_16 = 0;
bool local_var_17 = (local_var_15 == local_var_16);
auto local_var_19 = sdp_group1_d_bn_mul_prelu.range(0, 0);
sc_biguint<1> local_var_20 = 1;
bool local_var_21 = (local_var_19 == local_var_20);
bool local_var_22 = (local_var_17 & local_var_21);
auto local_var_24 = sdp_group1_d_bs_relu_bypass.range(0, 0);
sc_biguint<1> local_var_25 = 1;
bool local_var_26 = (local_var_24 == local_var_25);
bool local_var_27 = (local_var_22 & local_var_26);
auto local_var_29 = sdp_group1_d_bs_alu_bypass.range(0, 0);
sc_biguint<1> local_var_30 = 1;
bool local_var_31 = (local_var_29 == local_var_30);
bool local_var_32 = (local_var_27 & local_var_31);
bool local_var_33 = (local_var_13 & local_var_32);
auto local_var_34 = sdp_group1_d_bn_bypass.range(0, 0);
sc_biguint<1> local_var_35 = 0;
bool local_var_36 = (local_var_34 == local_var_35);
auto local_var_37 = sdp_group1_d_bs_bypass.range(0, 0);
sc_biguint<1> local_var_38 = 1;
bool local_var_39 = (local_var_37 == local_var_38);
bool local_var_40 = (local_var_36 & local_var_39);
auto local_var_41 = sdp_group1_d_ew_bypass.range(0, 0);
sc_biguint<1> local_var_42 = 1;
bool local_var_43 = (local_var_41 == local_var_42);
bool local_var_44 = (local_var_40 & local_var_43);
auto local_var_46 = sdp_group1_d_bn_mul_bypass.range(0, 0);
sc_biguint<1> local_var_47 = 0;
bool local_var_48 = (local_var_46 == local_var_47);
auto local_var_49 = sdp_group1_d_bn_mul_prelu.range(0, 0);
sc_biguint<1> local_var_50 = 0;
bool local_var_51 = (local_var_49 == local_var_50);
bool local_var_52 = (local_var_48 & local_var_51);
auto local_var_54 = sdp_group1_d_bn_relu_bypass.range(0, 0);
sc_biguint<1> local_var_55 = 1;
bool local_var_56 = (local_var_54 == local_var_55);
bool local_var_57 = (local_var_52 & local_var_56);
auto local_var_59 = sdp_group1_d_bn_alu_bypass.range(0, 0);
sc_biguint<1> local_var_60 = 1;
bool local_var_61 = (local_var_59 == local_var_60);
bool local_var_62 = (local_var_57 & local_var_61);
bool local_var_63 = (local_var_44 & local_var_62);
bool local_var_64 = (local_var_33 | local_var_63);
sc_biguint<1> local_var_66 = 0;
bool local_var_67 = (sdp_s_consumer == local_var_66);
bool local_var_68 = (local_var_64 & local_var_67);
auto local_var_70 = sdp_group1_d_op_en.range(0, 0);
sc_biguint<1> local_var_71 = 0;
bool local_var_72 = (local_var_70 == local_var_71);
bool local_var_73 = !local_var_72;
bool local_var_74 = (local_var_68 & local_var_73);
auto& univ_var_300 = local_var_74;
return univ_var_300;
}
void sdp::update_sdp_Compute_PReLU_group1() {
sc_biguint<16> local_var_0 = 0;
auto local_var_2 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_3 = 1;
bool local_var_4 = (local_var_2 == local_var_3);
auto local_var_7 = (local_var_4) ? sdp_dma_data_0 : sdp_regs_data_0;
univ_var_301 = (sc_biguint<16>(local_var_0), sc_biguint<16>(local_var_7));
sc_biguint<24> local_var_9 = 0;
univ_var_302 = (sc_biguint<24>(local_var_9), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_12 = (univ_var_301 >> univ_var_302);
auto local_var_12_nxt_holder = local_var_12;
sc_biguint<16> local_var_13 = 0;
auto local_var_14 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_15 = 1;
bool local_var_16 = (local_var_14 == local_var_15);
auto local_var_19 = (local_var_16) ? sdp_dma_data_1 : sdp_regs_data_1;
univ_var_303 = (sc_biguint<16>(local_var_13), sc_biguint<16>(local_var_19));
sc_biguint<24> local_var_21 = 0;
univ_var_304 = (sc_biguint<24>(local_var_21), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_23 = (univ_var_303 >> univ_var_304);
auto local_var_23_nxt_holder = local_var_23;
sc_biguint<16> local_var_24 = 0;
auto local_var_25 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_26 = 1;
bool local_var_27 = (local_var_25 == local_var_26);
auto local_var_30 = (local_var_27) ? sdp_dma_data_10 : sdp_regs_data_10;
univ_var_305 = (sc_biguint<16>(local_var_24), sc_biguint<16>(local_var_30));
sc_biguint<24> local_var_32 = 0;
univ_var_306 = (sc_biguint<24>(local_var_32), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_34 = (univ_var_305 >> univ_var_306);
auto local_var_34_nxt_holder = local_var_34;
sc_biguint<16> local_var_35 = 0;
auto local_var_36 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_37 = 1;
bool local_var_38 = (local_var_36 == local_var_37);
auto local_var_41 = (local_var_38) ? sdp_dma_data_11 : sdp_regs_data_11;
univ_var_307 = (sc_biguint<16>(local_var_35), sc_biguint<16>(local_var_41));
sc_biguint<24> local_var_43 = 0;
univ_var_308 = (sc_biguint<24>(local_var_43), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_45 = (univ_var_307 >> univ_var_308);
auto local_var_45_nxt_holder = local_var_45;
sc_biguint<16> local_var_46 = 0;
auto local_var_47 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_48 = 1;
bool local_var_49 = (local_var_47 == local_var_48);
auto local_var_52 = (local_var_49) ? sdp_dma_data_12 : sdp_regs_data_12;
univ_var_309 = (sc_biguint<16>(local_var_46), sc_biguint<16>(local_var_52));
sc_biguint<24> local_var_54 = 0;
univ_var_310 = (sc_biguint<24>(local_var_54), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_56 = (univ_var_309 >> univ_var_310);
auto local_var_56_nxt_holder = local_var_56;
sc_biguint<16> local_var_57 = 0;
auto local_var_58 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_59 = 1;
bool local_var_60 = (local_var_58 == local_var_59);
auto local_var_63 = (local_var_60) ? sdp_dma_data_13 : sdp_regs_data_13;
univ_var_311 = (sc_biguint<16>(local_var_57), sc_biguint<16>(local_var_63));
sc_biguint<24> local_var_65 = 0;
univ_var_312 = (sc_biguint<24>(local_var_65), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_67 = (univ_var_311 >> univ_var_312);
auto local_var_67_nxt_holder = local_var_67;
sc_biguint<16> local_var_68 = 0;
auto local_var_69 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_70 = 1;
bool local_var_71 = (local_var_69 == local_var_70);
auto local_var_74 = (local_var_71) ? sdp_dma_data_14 : sdp_regs_data_14;
univ_var_313 = (sc_biguint<16>(local_var_68), sc_biguint<16>(local_var_74));
sc_biguint<24> local_var_76 = 0;
univ_var_314 = (sc_biguint<24>(local_var_76), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_78 = (univ_var_313 >> univ_var_314);
auto local_var_78_nxt_holder = local_var_78;
sc_biguint<16> local_var_79 = 0;
auto local_var_80 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_81 = 1;
bool local_var_82 = (local_var_80 == local_var_81);
auto local_var_85 = (local_var_82) ? sdp_dma_data_15 : sdp_regs_data_15;
univ_var_315 = (sc_biguint<16>(local_var_79), sc_biguint<16>(local_var_85));
sc_biguint<24> local_var_87 = 0;
univ_var_316 = (sc_biguint<24>(local_var_87), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_89 = (univ_var_315 >> univ_var_316);
auto local_var_89_nxt_holder = local_var_89;
sc_biguint<16> local_var_90 = 0;
auto local_var_91 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_92 = 1;
bool local_var_93 = (local_var_91 == local_var_92);
auto local_var_96 = (local_var_93) ? sdp_dma_data_2 : sdp_regs_data_2;
univ_var_317 = (sc_biguint<16>(local_var_90), sc_biguint<16>(local_var_96));
sc_biguint<24> local_var_98 = 0;
univ_var_318 = (sc_biguint<24>(local_var_98), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_100 = (univ_var_317 >> univ_var_318);
auto local_var_100_nxt_holder = local_var_100;
sc_biguint<16> local_var_101 = 0;
auto local_var_102 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_103 = 1;
bool local_var_104 = (local_var_102 == local_var_103);
auto local_var_107 = (local_var_104) ? sdp_dma_data_3 : sdp_regs_data_3;
univ_var_319 = (sc_biguint<16>(local_var_101), sc_biguint<16>(local_var_107));
sc_biguint<24> local_var_109 = 0;
univ_var_320 = (sc_biguint<24>(local_var_109), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_111 = (univ_var_319 >> univ_var_320);
auto local_var_111_nxt_holder = local_var_111;
sc_biguint<16> local_var_112 = 0;
auto local_var_113 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_114 = 1;
bool local_var_115 = (local_var_113 == local_var_114);
auto local_var_118 = (local_var_115) ? sdp_dma_data_4 : sdp_regs_data_4;
univ_var_321 = (sc_biguint<16>(local_var_112), sc_biguint<16>(local_var_118));
sc_biguint<24> local_var_120 = 0;
univ_var_322 = (sc_biguint<24>(local_var_120), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_122 = (univ_var_321 >> univ_var_322);
auto local_var_122_nxt_holder = local_var_122;
sc_biguint<16> local_var_123 = 0;
auto local_var_124 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_125 = 1;
bool local_var_126 = (local_var_124 == local_var_125);
auto local_var_129 = (local_var_126) ? sdp_dma_data_5 : sdp_regs_data_5;
univ_var_323 = (sc_biguint<16>(local_var_123), sc_biguint<16>(local_var_129));
sc_biguint<24> local_var_131 = 0;
univ_var_324 = (sc_biguint<24>(local_var_131), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_133 = (univ_var_323 >> univ_var_324);
auto local_var_133_nxt_holder = local_var_133;
sc_biguint<16> local_var_134 = 0;
auto local_var_135 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_136 = 1;
bool local_var_137 = (local_var_135 == local_var_136);
auto local_var_140 = (local_var_137) ? sdp_dma_data_6 : sdp_regs_data_6;
univ_var_325 = (sc_biguint<16>(local_var_134), sc_biguint<16>(local_var_140));
sc_biguint<24> local_var_142 = 0;
univ_var_326 = (sc_biguint<24>(local_var_142), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_144 = (univ_var_325 >> univ_var_326);
auto local_var_144_nxt_holder = local_var_144;
sc_biguint<16> local_var_145 = 0;
auto local_var_146 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_147 = 1;
bool local_var_148 = (local_var_146 == local_var_147);
auto local_var_151 = (local_var_148) ? sdp_dma_data_7 : sdp_regs_data_7;
univ_var_327 = (sc_biguint<16>(local_var_145), sc_biguint<16>(local_var_151));
sc_biguint<24> local_var_153 = 0;
univ_var_328 = (sc_biguint<24>(local_var_153), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_155 = (univ_var_327 >> univ_var_328);
auto local_var_155_nxt_holder = local_var_155;
sc_biguint<16> local_var_156 = 0;
auto local_var_157 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_158 = 1;
bool local_var_159 = (local_var_157 == local_var_158);
auto local_var_162 = (local_var_159) ? sdp_dma_data_8 : sdp_regs_data_8;
univ_var_329 = (sc_biguint<16>(local_var_156), sc_biguint<16>(local_var_162));
sc_biguint<24> local_var_164 = 0;
univ_var_330 = (sc_biguint<24>(local_var_164), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_166 = (univ_var_329 >> univ_var_330);
auto local_var_166_nxt_holder = local_var_166;
sc_biguint<16> local_var_167 = 0;
auto local_var_168 = sdp_group1_d_bs_mul_src.range(0, 0);
sc_biguint<1> local_var_169 = 1;
bool local_var_170 = (local_var_168 == local_var_169);
auto local_var_173 = (local_var_170) ? sdp_dma_data_9 : sdp_regs_data_9;
univ_var_331 = (sc_biguint<16>(local_var_167), sc_biguint<16>(local_var_173));
sc_biguint<24> local_var_175 = 0;
univ_var_332 = (sc_biguint<24>(local_var_175), sc_biguint<8>(sdp_group1_d_bs_mul_shift_value));
sc_biguint<32> local_var_177 = (univ_var_331 >> univ_var_332);
auto local_var_177_nxt_holder = local_var_177;
sdp_pdp_output_0 = local_var_12_nxt_holder;
sdp_pdp_output_1 = local_var_23_nxt_holder;
sdp_pdp_output_10 = local_var_34_nxt_holder;
sdp_pdp_output_11 = local_var_45_nxt_holder;
sdp_pdp_output_12 = local_var_56_nxt_holder;
sdp_pdp_output_13 = local_var_67_nxt_holder;
sdp_pdp_output_14 = local_var_78_nxt_holder;
sdp_pdp_output_15 = local_var_89_nxt_holder;
sdp_pdp_output_2 = local_var_100_nxt_holder;
sdp_pdp_output_3 = local_var_111_nxt_holder;
sdp_pdp_output_4 = local_var_122_nxt_holder;
sdp_pdp_output_5 = local_var_133_nxt_holder;
sdp_pdp_output_6 = local_var_144_nxt_holder;
sdp_pdp_output_7 = local_var_155_nxt_holder;
sdp_pdp_output_8 = local_var_166_nxt_holder;
sdp_pdp_output_9 = local_var_177_nxt_holder;
#ifdef ILATOR_VERBOSE
instr_update_log << "No." << std::dec << GetInstrCntr() << '\t' << "Compute_PReLU_group1 state updates:" << std::endl;
instr_update_log << "    sdp_pdp_output_0 => " << std::hex << "0x" << sdp_pdp_output_0 << std::endl; 
instr_update_log << "    sdp_pdp_output_1 => " << std::hex << "0x" << sdp_pdp_output_1 << std::endl; 
instr_update_log << "    sdp_pdp_output_10 => " << std::hex << "0x" << sdp_pdp_output_10 << std::endl; 
instr_update_log << "    sdp_pdp_output_11 => " << std::hex << "0x" << sdp_pdp_output_11 << std::endl; 
instr_update_log << "    sdp_pdp_output_12 => " << std::hex << "0x" << sdp_pdp_output_12 << std::endl; 
instr_update_log << "    sdp_pdp_output_13 => " << std::hex << "0x" << sdp_pdp_output_13 << std::endl; 
instr_update_log << "    sdp_pdp_output_14 => " << std::hex << "0x" << sdp_pdp_output_14 << std::endl; 
instr_update_log << "    sdp_pdp_output_15 => " << std::hex << "0x" << sdp_pdp_output_15 << std::endl; 
instr_update_log << "    sdp_pdp_output_2 => " << std::hex << "0x" << sdp_pdp_output_2 << std::endl; 
instr_update_log << "    sdp_pdp_output_3 => " << std::hex << "0x" << sdp_pdp_output_3 << std::endl; 
instr_update_log << "    sdp_pdp_output_4 => " << std::hex << "0x" << sdp_pdp_output_4 << std::endl; 
instr_update_log << "    sdp_pdp_output_5 => " << std::hex << "0x" << sdp_pdp_output_5 << std::endl; 
instr_update_log << "    sdp_pdp_output_6 => " << std::hex << "0x" << sdp_pdp_output_6 << std::endl; 
instr_update_log << "    sdp_pdp_output_7 => " << std::hex << "0x" << sdp_pdp_output_7 << std::endl; 
instr_update_log << "    sdp_pdp_output_8 => " << std::hex << "0x" << sdp_pdp_output_8 << std::endl; 
instr_update_log << "    sdp_pdp_output_9 => " << std::hex << "0x" << sdp_pdp_output_9 << std::endl; 
instr_update_log << std::endl;
#endif
}
