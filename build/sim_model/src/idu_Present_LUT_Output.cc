#include <sdp.h>
bool sdp::decode_sdp_Present_LUT_Output() {
auto local_var_1 = sdp_s_lut_access_type.range(0, 0);
sc_biguint<1> local_var_2 = 0;
bool local_var_3 = (local_var_1 == local_var_2);
auto local_var_5 = sdp_s_lut_table_id.range(0, 0);
sc_biguint<1> local_var_6 = 1;
bool local_var_7 = (local_var_5 == local_var_6);
bool local_var_8 = (local_var_3 & local_var_7);
auto local_var_10 = sdp_group0_d_ew_lut_bypass.range(0, 0);
sc_biguint<1> local_var_11 = 0;
bool local_var_12 = (local_var_10 == local_var_11);
bool local_var_13 = (local_var_8 & local_var_12);
auto& univ_var_289 = local_var_13;
return univ_var_289;
}
void sdp::update_sdp_Present_LUT_Output() {
auto local_var_1 = sdp_le_uflow.range(0, 0);
sc_biguint<1> local_var_2 = 1;
bool local_var_3 = (local_var_1 == local_var_2);
auto local_var_5 = sdp_lo_uflow.range(0, 0);
sc_biguint<1> local_var_6 = 1;
bool local_var_7 = (local_var_5 == local_var_6);
bool local_var_8 = (local_var_3 & local_var_7);
auto local_var_10 = sdp_s_lut_uflow_priority.range(0, 0);
sc_biguint<1> local_var_11 = 1;
bool local_var_12 = (local_var_10 == local_var_11);
auto local_var_14 = sdp_lo_fraction.range(0, 0);
auto local_var_16 = sdp_le_fraction.range(0, 0);
auto local_var_17 = (local_var_12) ? local_var_14 : local_var_16;
auto local_var_19 = sdp_le_oflow.range(0, 0);
sc_biguint<1> local_var_20 = 1;
bool local_var_21 = (local_var_19 == local_var_20);
auto local_var_23 = sdp_lo_oflow.range(0, 0);
sc_biguint<1> local_var_24 = 1;
bool local_var_25 = (local_var_23 == local_var_24);
bool local_var_26 = (local_var_21 & local_var_25);
auto local_var_28 = sdp_s_lut_oflow_priority.range(0, 0);
sc_biguint<1> local_var_29 = 1;
bool local_var_30 = (local_var_28 == local_var_29);
auto local_var_31 = (local_var_30) ? local_var_14 : local_var_16;
sc_biguint<1> local_var_32 = 1;
bool local_var_33 = (local_var_1 == local_var_32);
sc_biguint<1> local_var_34 = 1;
bool local_var_35 = (local_var_19 == local_var_34);
bool local_var_36 = (local_var_33 | local_var_35);
bool local_var_37 = false;
bool local_var_38 = (local_var_36 == local_var_37);
bool local_var_39 = true;
bool local_var_40 = (local_var_38 == local_var_39);
sc_biguint<1> local_var_41 = 1;
bool local_var_42 = (local_var_5 == local_var_41);
sc_biguint<1> local_var_43 = 1;
bool local_var_44 = (local_var_23 == local_var_43);
bool local_var_45 = (local_var_42 | local_var_44);
bool local_var_46 = false;
bool local_var_47 = (local_var_45 == local_var_46);
bool local_var_48 = true;
bool local_var_49 = (local_var_47 == local_var_48);
bool local_var_50 = (local_var_40 & local_var_49);
auto local_var_52 = sdp_s_lut_hybrid_priority.range(0, 0);
sc_biguint<1> local_var_53 = 1;
bool local_var_54 = (local_var_52 == local_var_53);
auto local_var_55 = (local_var_54) ? local_var_14 : local_var_16;
bool local_var_56 = true;
bool local_var_57 = (local_var_36 == local_var_56);
bool local_var_58 = true;
bool local_var_59 = (local_var_45 == local_var_58);
bool local_var_60 = (local_var_57 & local_var_59);
sc_biguint<1> local_var_61 = 1;
bool local_var_62 = (local_var_52 == local_var_61);
auto local_var_63 = (local_var_62) ? local_var_14 : local_var_16;
bool local_var_64 = true;
bool local_var_65 = (local_var_38 == local_var_64);
auto local_var_66 = (local_var_65) ? local_var_16 : local_var_14;
auto local_var_67 = (local_var_60) ? local_var_63 : local_var_66;
auto local_var_68 = (local_var_50) ? local_var_55 : local_var_67;
auto local_var_69 = (local_var_26) ? local_var_31 : local_var_68;
auto local_var_70 = (local_var_8) ? local_var_17 : local_var_69;
auto local_var_70_nxt_holder = local_var_70;
sc_biguint<1> local_var_71 = 1;
bool local_var_72 = (local_var_1 == local_var_71);
sc_biguint<1> local_var_73 = 1;
bool local_var_74 = (local_var_5 == local_var_73);
bool local_var_75 = (local_var_72 & local_var_74);
sc_biguint<1> local_var_76 = 1;
bool local_var_77 = (local_var_10 == local_var_76);
sc_biguint<1> local_var_78 = 1;
sc_biguint<1> local_var_79 = 0;
auto local_var_80 = (local_var_77) ? local_var_78 : local_var_79;
sc_biguint<1> local_var_81 = 1;
bool local_var_82 = (local_var_19 == local_var_81);
sc_biguint<1> local_var_83 = 1;
bool local_var_84 = (local_var_23 == local_var_83);
bool local_var_85 = (local_var_82 & local_var_84);
sc_biguint<1> local_var_86 = 1;
bool local_var_87 = (local_var_28 == local_var_86);
sc_biguint<1> local_var_88 = 1;
sc_biguint<1> local_var_89 = 0;
auto local_var_90 = (local_var_87) ? local_var_88 : local_var_89;
bool local_var_91 = true;
bool local_var_92 = (local_var_38 == local_var_91);
bool local_var_93 = true;
bool local_var_94 = (local_var_47 == local_var_93);
bool local_var_95 = (local_var_92 & local_var_94);
sc_biguint<1> local_var_96 = 1;
bool local_var_97 = (local_var_52 == local_var_96);
sc_biguint<1> local_var_98 = 1;
sc_biguint<1> local_var_99 = 0;
auto local_var_100 = (local_var_97) ? local_var_98 : local_var_99;
bool local_var_101 = true;
bool local_var_102 = (local_var_36 == local_var_101);
bool local_var_103 = true;
bool local_var_104 = (local_var_45 == local_var_103);
bool local_var_105 = (local_var_102 & local_var_104);
sc_biguint<1> local_var_106 = 1;
bool local_var_107 = (local_var_52 == local_var_106);
sc_biguint<1> local_var_108 = 1;
sc_biguint<1> local_var_109 = 0;
auto local_var_110 = (local_var_107) ? local_var_108 : local_var_109;
bool local_var_111 = true;
bool local_var_112 = (local_var_38 == local_var_111);
sc_biguint<1> local_var_113 = 0;
sc_biguint<1> local_var_114 = 1;
auto local_var_115 = (local_var_112) ? local_var_113 : local_var_114;
auto local_var_116 = (local_var_105) ? local_var_110 : local_var_115;
auto local_var_117 = (local_var_95) ? local_var_100 : local_var_116;
auto local_var_118 = (local_var_85) ? local_var_90 : local_var_117;
auto local_var_119 = (local_var_75) ? local_var_80 : local_var_118;
auto local_var_119_nxt_holder = local_var_119;
sc_biguint<1> local_var_120 = 1;
bool local_var_121 = (local_var_1 == local_var_120);
sc_biguint<1> local_var_122 = 1;
bool local_var_123 = (local_var_5 == local_var_122);
bool local_var_124 = (local_var_121 & local_var_123);
sc_biguint<1> local_var_125 = 1;
bool local_var_126 = (local_var_10 == local_var_125);
auto local_var_128 = sdp_lo_index.range(0, 0);
auto local_var_130 = sdp_le_index.range(0, 0);
auto local_var_131 = (local_var_126) ? local_var_128 : local_var_130;
sc_biguint<1> local_var_132 = 1;
bool local_var_133 = (local_var_19 == local_var_132);
sc_biguint<1> local_var_134 = 1;
bool local_var_135 = (local_var_23 == local_var_134);
bool local_var_136 = (local_var_133 & local_var_135);
sc_biguint<1> local_var_137 = 1;
bool local_var_138 = (local_var_28 == local_var_137);
auto local_var_139 = (local_var_138) ? local_var_128 : local_var_130;
bool local_var_140 = true;
bool local_var_141 = (local_var_38 == local_var_140);
bool local_var_142 = true;
bool local_var_143 = (local_var_47 == local_var_142);
bool local_var_144 = (local_var_141 & local_var_143);
sc_biguint<1> local_var_145 = 1;
bool local_var_146 = (local_var_52 == local_var_145);
auto local_var_147 = (local_var_146) ? local_var_128 : local_var_130;
bool local_var_148 = true;
bool local_var_149 = (local_var_36 == local_var_148);
bool local_var_150 = true;
bool local_var_151 = (local_var_45 == local_var_150);
bool local_var_152 = (local_var_149 & local_var_151);
sc_biguint<1> local_var_153 = 1;
bool local_var_154 = (local_var_52 == local_var_153);
auto local_var_155 = (local_var_154) ? local_var_128 : local_var_130;
bool local_var_156 = true;
bool local_var_157 = (local_var_38 == local_var_156);
auto local_var_158 = (local_var_157) ? local_var_130 : local_var_128;
auto local_var_159 = (local_var_152) ? local_var_155 : local_var_158;
auto local_var_160 = (local_var_144) ? local_var_147 : local_var_159;
auto local_var_161 = (local_var_136) ? local_var_139 : local_var_160;
auto local_var_162 = (local_var_124) ? local_var_131 : local_var_161;
auto local_var_162_nxt_holder = local_var_162;
sc_biguint<1> local_var_163 = 1;
bool local_var_164 = (local_var_1 == local_var_163);
sc_biguint<1> local_var_165 = 1;
bool local_var_166 = (local_var_5 == local_var_165);
bool local_var_167 = (local_var_164 & local_var_166);
sc_biguint<1> local_var_168 = 0;
sc_biguint<1> local_var_169 = 1;
bool local_var_170 = (local_var_19 == local_var_169);
sc_biguint<1> local_var_171 = 1;
bool local_var_172 = (local_var_23 == local_var_171);
bool local_var_173 = (local_var_170 & local_var_172);
sc_biguint<1> local_var_174 = 1;
bool local_var_175 = (local_var_28 == local_var_174);
auto local_var_176 = (local_var_175) ? local_var_23 : local_var_19;
bool local_var_177 = true;
bool local_var_178 = (local_var_38 == local_var_177);
bool local_var_179 = true;
bool local_var_180 = (local_var_47 == local_var_179);
bool local_var_181 = (local_var_178 & local_var_180);
sc_biguint<1> local_var_182 = 0;
bool local_var_183 = true;
bool local_var_184 = (local_var_36 == local_var_183);
bool local_var_185 = true;
bool local_var_186 = (local_var_45 == local_var_185);
bool local_var_187 = (local_var_184 & local_var_186);
sc_biguint<1> local_var_188 = 1;
bool local_var_189 = (local_var_52 == local_var_188);
auto local_var_190 = (local_var_189) ? local_var_23 : local_var_19;
sc_biguint<1> local_var_191 = 0;
auto local_var_192 = (local_var_187) ? local_var_190 : local_var_191;
auto local_var_193 = (local_var_181) ? local_var_182 : local_var_192;
auto local_var_194 = (local_var_173) ? local_var_176 : local_var_193;
auto local_var_195 = (local_var_167) ? local_var_168 : local_var_194;
auto local_var_195_nxt_holder = local_var_195;
sc_biguint<1> local_var_196 = 1;
bool local_var_197 = (local_var_1 == local_var_196);
sc_biguint<1> local_var_198 = 1;
bool local_var_199 = (local_var_5 == local_var_198);
bool local_var_200 = (local_var_197 & local_var_199);
sc_biguint<1> local_var_201 = 1;
bool local_var_202 = (local_var_10 == local_var_201);
auto local_var_203 = (local_var_202) ? local_var_5 : local_var_1;
sc_biguint<1> local_var_204 = 1;
bool local_var_205 = (local_var_19 == local_var_204);
sc_biguint<1> local_var_206 = 1;
bool local_var_207 = (local_var_23 == local_var_206);
bool local_var_208 = (local_var_205 & local_var_207);
sc_biguint<1> local_var_209 = 0;
bool local_var_210 = true;
bool local_var_211 = (local_var_38 == local_var_210);
bool local_var_212 = true;
bool local_var_213 = (local_var_47 == local_var_212);
bool local_var_214 = (local_var_211 & local_var_213);
sc_biguint<1> local_var_215 = 0;
bool local_var_216 = true;
bool local_var_217 = (local_var_36 == local_var_216);
bool local_var_218 = true;
bool local_var_219 = (local_var_45 == local_var_218);
bool local_var_220 = (local_var_217 & local_var_219);
sc_biguint<1> local_var_221 = 1;
bool local_var_222 = (local_var_52 == local_var_221);
auto local_var_223 = (local_var_222) ? local_var_5 : local_var_1;
sc_biguint<1> local_var_224 = 0;
auto local_var_225 = (local_var_220) ? local_var_223 : local_var_224;
auto local_var_226 = (local_var_214) ? local_var_215 : local_var_225;
auto local_var_227 = (local_var_208) ? local_var_209 : local_var_226;
auto local_var_228 = (local_var_200) ? local_var_203 : local_var_227;
auto local_var_228_nxt_holder = local_var_228;
sdp_fraction = local_var_70_nxt_holder;
sdp_id = local_var_119_nxt_holder;
sdp_index = local_var_162_nxt_holder;
sdp_oflow = local_var_195_nxt_holder;
sdp_uflow = local_var_228_nxt_holder;
#ifdef ILATOR_VERBOSE
instr_update_log << "No." << std::dec << GetInstrCntr() << '\t' << "Present_LUT_Output state updates:" << std::endl;
instr_update_log << "    sdp_fraction => " << std::hex << "0x" << sdp_fraction << std::endl; 
instr_update_log << "    sdp_id => " << std::hex << "0x" << sdp_id << std::endl; 
instr_update_log << "    sdp_index => " << std::hex << "0x" << sdp_index << std::endl; 
instr_update_log << "    sdp_oflow => " << std::hex << "0x" << sdp_oflow << std::endl; 
instr_update_log << "    sdp_uflow => " << std::hex << "0x" << sdp_uflow << std::endl; 
instr_update_log << std::endl;
#endif
}
