#include <sdp.h>
bool sdp::decode_sdp_Present_LUT_Output() {
auto local_var_1 = sdp_s_lut_access_type.range(0, 0);
sc_biguint<1> local_var_2 = 0;
bool local_var_3 = (local_var_1 == local_var_2);
auto local_var_5 = sdp_s_lut_table_id.range(0, 0);
sc_biguint<1> local_var_6 = 1;
bool local_var_7 = (local_var_5 == local_var_6);
bool local_var_8 = (local_var_3 & local_var_7);
auto local_var_10 = sdp_group0_d_ew_lut_bypass.range(0, 0);
sc_biguint<1> local_var_11 = 0;
bool local_var_12 = (local_var_10 == local_var_11);
bool local_var_13 = (local_var_8 & local_var_12);
auto& univ_var_294 = local_var_13;
return univ_var_294;
}
void sdp::update_sdp_Present_LUT_Output() {
auto local_var_1 = sdp_le_uflow.range(0, 0);
sc_biguint<1> local_var_2 = 1;
bool local_var_3 = (local_var_1 == local_var_2);
auto local_var_5 = sdp_lo_uflow.range(0, 0);
sc_biguint<1> local_var_6 = 1;
bool local_var_7 = (local_var_5 == local_var_6);
bool local_var_8 = (local_var_3 & local_var_7);
auto local_var_10 = sdp_s_lut_uflow_priority.range(0, 0);
sc_biguint<1> local_var_11 = 1;
bool local_var_12 = (local_var_10 == local_var_11);
auto local_var_14 = sdp_lo_fraction.range(8, 0);
sc_biguint<2> local_var_15 = 0;
auto local_var_17 = sdp_le_fraction.range(6, 0);
univ_var_295 = (sc_biguint<2>(local_var_15), sc_biguint<7>(local_var_17));
auto local_var_19 = (local_var_12) ? local_var_14 : univ_var_295;
auto local_var_21 = sdp_le_oflow.range(0, 0);
sc_biguint<1> local_var_22 = 1;
bool local_var_23 = (local_var_21 == local_var_22);
auto local_var_25 = sdp_lo_oflow.range(0, 0);
sc_biguint<1> local_var_26 = 1;
bool local_var_27 = (local_var_25 == local_var_26);
bool local_var_28 = (local_var_23 & local_var_27);
auto local_var_30 = sdp_s_lut_oflow_priority.range(0, 0);
sc_biguint<1> local_var_31 = 1;
bool local_var_32 = (local_var_30 == local_var_31);
sc_biguint<2> local_var_33 = 0;
univ_var_296 = (sc_biguint<2>(local_var_33), sc_biguint<7>(local_var_17));
auto local_var_35 = (local_var_32) ? local_var_14 : univ_var_296;
sc_biguint<1> local_var_36 = 1;
bool local_var_37 = (local_var_1 == local_var_36);
sc_biguint<1> local_var_38 = 1;
bool local_var_39 = (local_var_21 == local_var_38);
bool local_var_40 = (local_var_37 | local_var_39);
bool local_var_41 = false;
bool local_var_42 = (local_var_40 == local_var_41);
bool local_var_43 = true;
bool local_var_44 = (local_var_42 == local_var_43);
sc_biguint<1> local_var_45 = 1;
bool local_var_46 = (local_var_5 == local_var_45);
sc_biguint<1> local_var_47 = 1;
bool local_var_48 = (local_var_25 == local_var_47);
bool local_var_49 = (local_var_46 | local_var_48);
bool local_var_50 = false;
bool local_var_51 = (local_var_49 == local_var_50);
bool local_var_52 = true;
bool local_var_53 = (local_var_51 == local_var_52);
bool local_var_54 = (local_var_44 & local_var_53);
auto local_var_56 = sdp_s_lut_hybrid_priority.range(0, 0);
sc_biguint<1> local_var_57 = 1;
bool local_var_58 = (local_var_56 == local_var_57);
sc_biguint<2> local_var_59 = 0;
univ_var_297 = (sc_biguint<2>(local_var_59), sc_biguint<7>(local_var_17));
auto local_var_61 = (local_var_58) ? local_var_14 : univ_var_297;
bool local_var_62 = true;
bool local_var_63 = (local_var_40 == local_var_62);
bool local_var_64 = true;
bool local_var_65 = (local_var_49 == local_var_64);
bool local_var_66 = (local_var_63 & local_var_65);
sc_biguint<1> local_var_67 = 1;
bool local_var_68 = (local_var_56 == local_var_67);
sc_biguint<2> local_var_69 = 0;
univ_var_298 = (sc_biguint<2>(local_var_69), sc_biguint<7>(local_var_17));
auto local_var_71 = (local_var_68) ? local_var_14 : univ_var_298;
bool local_var_72 = true;
bool local_var_73 = (local_var_42 == local_var_72);
sc_biguint<2> local_var_74 = 0;
univ_var_299 = (sc_biguint<2>(local_var_74), sc_biguint<7>(local_var_17));
auto local_var_76 = (local_var_73) ? univ_var_299 : local_var_14;
auto local_var_77 = (local_var_66) ? local_var_71 : local_var_76;
auto local_var_78 = (local_var_54) ? local_var_61 : local_var_77;
auto local_var_79 = (local_var_28) ? local_var_35 : local_var_78;
auto local_var_80 = (local_var_8) ? local_var_19 : local_var_79;
auto local_var_80_nxt_holder = local_var_80;
sc_biguint<1> local_var_81 = 1;
bool local_var_82 = (local_var_1 == local_var_81);
sc_biguint<1> local_var_83 = 1;
bool local_var_84 = (local_var_5 == local_var_83);
bool local_var_85 = (local_var_82 & local_var_84);
sc_biguint<1> local_var_86 = 1;
bool local_var_87 = (local_var_10 == local_var_86);
sc_biguint<1> local_var_88 = 1;
sc_biguint<1> local_var_89 = 0;
auto local_var_90 = (local_var_87) ? local_var_88 : local_var_89;
sc_biguint<1> local_var_91 = 1;
bool local_var_92 = (local_var_21 == local_var_91);
sc_biguint<1> local_var_93 = 1;
bool local_var_94 = (local_var_25 == local_var_93);
bool local_var_95 = (local_var_92 & local_var_94);
sc_biguint<1> local_var_96 = 1;
bool local_var_97 = (local_var_30 == local_var_96);
sc_biguint<1> local_var_98 = 1;
sc_biguint<1> local_var_99 = 0;
auto local_var_100 = (local_var_97) ? local_var_98 : local_var_99;
bool local_var_101 = true;
bool local_var_102 = (local_var_42 == local_var_101);
bool local_var_103 = true;
bool local_var_104 = (local_var_51 == local_var_103);
bool local_var_105 = (local_var_102 & local_var_104);
sc_biguint<1> local_var_106 = 1;
bool local_var_107 = (local_var_56 == local_var_106);
sc_biguint<1> local_var_108 = 1;
sc_biguint<1> local_var_109 = 0;
auto local_var_110 = (local_var_107) ? local_var_108 : local_var_109;
bool local_var_111 = true;
bool local_var_112 = (local_var_40 == local_var_111);
bool local_var_113 = true;
bool local_var_114 = (local_var_49 == local_var_113);
bool local_var_115 = (local_var_112 & local_var_114);
sc_biguint<1> local_var_116 = 1;
bool local_var_117 = (local_var_56 == local_var_116);
sc_biguint<1> local_var_118 = 1;
sc_biguint<1> local_var_119 = 0;
auto local_var_120 = (local_var_117) ? local_var_118 : local_var_119;
bool local_var_121 = true;
bool local_var_122 = (local_var_42 == local_var_121);
sc_biguint<1> local_var_123 = 0;
sc_biguint<1> local_var_124 = 1;
auto local_var_125 = (local_var_122) ? local_var_123 : local_var_124;
auto local_var_126 = (local_var_115) ? local_var_120 : local_var_125;
auto local_var_127 = (local_var_105) ? local_var_110 : local_var_126;
auto local_var_128 = (local_var_95) ? local_var_100 : local_var_127;
auto local_var_129 = (local_var_85) ? local_var_90 : local_var_128;
auto local_var_129_nxt_holder = local_var_129;
sc_biguint<1> local_var_130 = 1;
bool local_var_131 = (local_var_1 == local_var_130);
sc_biguint<1> local_var_132 = 1;
bool local_var_133 = (local_var_5 == local_var_132);
bool local_var_134 = (local_var_131 & local_var_133);
sc_biguint<1> local_var_135 = 1;
bool local_var_136 = (local_var_10 == local_var_135);
auto local_var_138 = sdp_lo_index.range(8, 0);
sc_biguint<2> local_var_139 = 0;
auto local_var_141 = sdp_le_index.range(6, 0);
univ_var_300 = (sc_biguint<2>(local_var_139), sc_biguint<7>(local_var_141));
auto local_var_143 = (local_var_136) ? local_var_138 : univ_var_300;
sc_biguint<1> local_var_144 = 1;
bool local_var_145 = (local_var_21 == local_var_144);
sc_biguint<1> local_var_146 = 1;
bool local_var_147 = (local_var_25 == local_var_146);
bool local_var_148 = (local_var_145 & local_var_147);
sc_biguint<1> local_var_149 = 1;
bool local_var_150 = (local_var_30 == local_var_149);
sc_biguint<2> local_var_151 = 0;
univ_var_301 = (sc_biguint<2>(local_var_151), sc_biguint<7>(local_var_141));
auto local_var_153 = (local_var_150) ? local_var_138 : univ_var_301;
bool local_var_154 = true;
bool local_var_155 = (local_var_42 == local_var_154);
bool local_var_156 = true;
bool local_var_157 = (local_var_51 == local_var_156);
bool local_var_158 = (local_var_155 & local_var_157);
sc_biguint<1> local_var_159 = 1;
bool local_var_160 = (local_var_56 == local_var_159);
sc_biguint<2> local_var_161 = 0;
univ_var_302 = (sc_biguint<2>(local_var_161), sc_biguint<7>(local_var_141));
auto local_var_163 = (local_var_160) ? local_var_138 : univ_var_302;
bool local_var_164 = true;
bool local_var_165 = (local_var_40 == local_var_164);
bool local_var_166 = true;
bool local_var_167 = (local_var_49 == local_var_166);
bool local_var_168 = (local_var_165 & local_var_167);
sc_biguint<1> local_var_169 = 1;
bool local_var_170 = (local_var_56 == local_var_169);
sc_biguint<2> local_var_171 = 0;
univ_var_303 = (sc_biguint<2>(local_var_171), sc_biguint<7>(local_var_141));
auto local_var_173 = (local_var_170) ? local_var_138 : univ_var_303;
bool local_var_174 = true;
bool local_var_175 = (local_var_42 == local_var_174);
sc_biguint<2> local_var_176 = 0;
univ_var_304 = (sc_biguint<2>(local_var_176), sc_biguint<7>(local_var_141));
auto local_var_178 = (local_var_175) ? univ_var_304 : local_var_138;
auto local_var_179 = (local_var_168) ? local_var_173 : local_var_178;
auto local_var_180 = (local_var_158) ? local_var_163 : local_var_179;
auto local_var_181 = (local_var_148) ? local_var_153 : local_var_180;
auto local_var_182 = (local_var_134) ? local_var_143 : local_var_181;
auto local_var_182_nxt_holder = local_var_182;
sc_biguint<1> local_var_183 = 1;
bool local_var_184 = (local_var_1 == local_var_183);
sc_biguint<1> local_var_185 = 1;
bool local_var_186 = (local_var_5 == local_var_185);
bool local_var_187 = (local_var_184 & local_var_186);
sc_biguint<1> local_var_188 = 0;
sc_biguint<1> local_var_189 = 1;
bool local_var_190 = (local_var_21 == local_var_189);
sc_biguint<1> local_var_191 = 1;
bool local_var_192 = (local_var_25 == local_var_191);
bool local_var_193 = (local_var_190 & local_var_192);
sc_biguint<1> local_var_194 = 1;
bool local_var_195 = (local_var_30 == local_var_194);
auto local_var_196 = (local_var_195) ? local_var_25 : local_var_21;
bool local_var_197 = true;
bool local_var_198 = (local_var_42 == local_var_197);
bool local_var_199 = true;
bool local_var_200 = (local_var_51 == local_var_199);
bool local_var_201 = (local_var_198 & local_var_200);
sc_biguint<1> local_var_202 = 0;
bool local_var_203 = true;
bool local_var_204 = (local_var_40 == local_var_203);
bool local_var_205 = true;
bool local_var_206 = (local_var_49 == local_var_205);
bool local_var_207 = (local_var_204 & local_var_206);
sc_biguint<1> local_var_208 = 1;
bool local_var_209 = (local_var_56 == local_var_208);
auto local_var_210 = (local_var_209) ? local_var_25 : local_var_21;
sc_biguint<1> local_var_211 = 0;
auto local_var_212 = (local_var_207) ? local_var_210 : local_var_211;
auto local_var_213 = (local_var_201) ? local_var_202 : local_var_212;
auto local_var_214 = (local_var_193) ? local_var_196 : local_var_213;
auto local_var_215 = (local_var_187) ? local_var_188 : local_var_214;
auto local_var_215_nxt_holder = local_var_215;
sc_biguint<1> local_var_216 = 1;
bool local_var_217 = (local_var_1 == local_var_216);
sc_biguint<1> local_var_218 = 1;
bool local_var_219 = (local_var_5 == local_var_218);
bool local_var_220 = (local_var_217 & local_var_219);
sc_biguint<1> local_var_221 = 1;
bool local_var_222 = (local_var_10 == local_var_221);
auto local_var_223 = (local_var_222) ? local_var_5 : local_var_1;
sc_biguint<1> local_var_224 = 1;
bool local_var_225 = (local_var_21 == local_var_224);
sc_biguint<1> local_var_226 = 1;
bool local_var_227 = (local_var_25 == local_var_226);
bool local_var_228 = (local_var_225 & local_var_227);
sc_biguint<1> local_var_229 = 0;
bool local_var_230 = true;
bool local_var_231 = (local_var_42 == local_var_230);
bool local_var_232 = true;
bool local_var_233 = (local_var_51 == local_var_232);
bool local_var_234 = (local_var_231 & local_var_233);
sc_biguint<1> local_var_235 = 0;
bool local_var_236 = true;
bool local_var_237 = (local_var_40 == local_var_236);
bool local_var_238 = true;
bool local_var_239 = (local_var_49 == local_var_238);
bool local_var_240 = (local_var_237 & local_var_239);
sc_biguint<1> local_var_241 = 1;
bool local_var_242 = (local_var_56 == local_var_241);
auto local_var_243 = (local_var_242) ? local_var_5 : local_var_1;
sc_biguint<1> local_var_244 = 0;
auto local_var_245 = (local_var_240) ? local_var_243 : local_var_244;
auto local_var_246 = (local_var_234) ? local_var_235 : local_var_245;
auto local_var_247 = (local_var_228) ? local_var_229 : local_var_246;
auto local_var_248 = (local_var_220) ? local_var_223 : local_var_247;
auto local_var_248_nxt_holder = local_var_248;
sdp_fraction = local_var_80_nxt_holder;
sdp_id = local_var_129_nxt_holder;
sdp_index = local_var_182_nxt_holder;
sdp_oflow = local_var_215_nxt_holder;
sdp_uflow = local_var_248_nxt_holder;
#ifdef ILATOR_VERBOSE
instr_update_log << "No." << std::dec << GetInstrCntr() << '\t' << "Present_LUT_Output state updates:" << std::endl;
instr_update_log << "    sdp_fraction => " << std::hex << "0x" << sdp_fraction << std::endl; 
instr_update_log << "    sdp_id => " << std::hex << "0x" << sdp_id << std::endl; 
instr_update_log << "    sdp_index => " << std::hex << "0x" << sdp_index << std::endl; 
instr_update_log << "    sdp_oflow => " << std::hex << "0x" << sdp_oflow << std::endl; 
instr_update_log << "    sdp_uflow => " << std::hex << "0x" << sdp_uflow << std::endl; 
instr_update_log << std::endl;
#endif
}
